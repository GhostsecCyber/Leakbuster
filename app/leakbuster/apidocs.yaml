swagger: "2.0"
info:
  description: "developed by GhostSecCyber"
  version: "2.0"
  title: "Leakbuster API Docs"
  contact:
    email: "matheus.chiarato@outlook.com.br"
basePath: "/api/v2"

tags:
- name: "User"
  description: "Users endpoints handlers"
- name: "Leaks Source"
  description: "Leaks sources endpoints handlers"

paths:
  /user/:
    get:
      tags:
      - "User"
      summary: "Retrieve all users"
      description: "[admin] Return data from all users"
      operationId: "viewUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"
        "401":
          description: "Unauthorized Access"
        "500":
          description: "Message: Sorry, something went wrong on our side"
    post:
      tags:
      - "User"
      summary: "Create new user"
      description: "[admin] Create a new user on the app"
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User parameters that need to be defined in body request"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Message: Bad request message"
        "401":
          description: "Unauthorized Access"
        "500":
          description: "Message: Sorry, something went wrong on our side"
  /user/{UserId}:
    get:
      tags:
      - "User"
      summary: "View Unique user"
      description: "Return data from your user, admin can access other users data"
      operationId: "getUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "UserId"
        in: "path"
        description: "User id that need to be defined in request"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Message: Bad request message"
        "401":
          description: "Unauthorized Access"
        "404":
          description: "User not found"
        "500":
          description: "Message: Sorry, something went wrong on our side"
    put:
      tags:
      - "User"
      summary: "Update an existing user"
      description: "Update user information"
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "UserId"
        in: "path"
        description: "User id that need to be defined in request"
        required: true
        type: "string"
      - in: "body"
        name: "Body"
        description: "User parameters that need to be defined in body request"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Message: Bad request message"
        "401":
          description: "Unauthorized Access"
        "404":
          description: "User not found"
        "500":
          description: "Message: Sorry, something went wrong on our side"
    delete:
      tags:
      - "User"
      summary: "Delete an existing user"
      description: ""
      operationId: "deleteUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "UserId"
        in: "path"
        description: "User id that need to be defined in request"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Message: Bad request message"
        "401":
          description: "Unauthorized Access"
        "404":
          description: "User not found"
        "500":
          description: "Message: Sorry, something went wrong on our side"
  /leak/source:
    get:
      tags:
        - "Leaks Source"
      summary: "Retrieve leak sources"
      description: "[admin, script] Return data from all leak sources"
      operationId: "viewLSource"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Success"
        "401":
          description: "Unauthorized Access"
        "500":
          description: "Message: Sorry, something went wrong on our side"
    post:
      tags:
        - "Leaks Source"
      summary: "Register a new leak source"
      description: "[admin, script] Register a new Leak on the app"
      operationId: "addLSource"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Leak Source parameters that need to be defined in body request"
          required: true
          schema:
            $ref: "#/definitions/Leak Source"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Message: Bad request message"
        "401":
          description: "Unauthorized Access"
        "500":
          description: "Message: Sorry, something went wrong on our side"
  /leak/source/{SourceId}:
    get:
      tags:
        - "Leaks Source"
      summary: "View Unique leak source"
      description: "[admin, script] Return data from requested leak source"
      operationId: "getLSource"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "SourceId"
          in: "path"
          description: "Leak source id that need to be defined in request"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Message: Bad request message"
        "401":
          description: "Unauthorized Access"
        "404":
          description: "Leak source not found"
        "500":
          description: "Message: Sorry, something went wrong on our side"
    put:
      tags:
        - "Leaks Source"
      summary: "Update an existing leak source"
      description: "[admin, script] Update leak source information"
      operationId: "updateLSource"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "SourceId"
          in: "path"
          description: "Leak source id that need to be defined in request"
          required: true
          type: "string"
        - in: "body"
          name: "Body"
          description: "Leak source parameters that need to be defined in body request"
          required: true
          schema:
            $ref: "#/definitions/Leak Source"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Message: Bad request message"
        "401":
          description: "Unauthorized Access"
        "404":
          description: "Leak source not found"
        "500":
          description: "Message: Sorry, something went wrong on our side"
    delete:
      tags:
        - "Leaks Source"
      summary: "Delete an existing Leak"
      description: "[admin, script]"
      operationId: "deleteUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "SourceId"
          in: "path"
          description: "Leak source id that need to be defined in request"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Message: Bad request message"
        "401":
          description: "Unauthorized Access"
        "404":
          description: "Leak source not found"
        "500":
          description: "Message: Sorry, something went wrong on our side"

definitions:
  User:
    type: "object"
    required:
    - "name"
    - "password"
    - "roles"
    - "phone"
    - "email"
    - "company"
    - "cdomain"
    - "site"
    properties:
      name:
        type: "string"
      password:
        type: "string"
      roles:
        type: "string"
      phone:
        type: "string"
      email:
        type: "string"
      company:
        type: "string"
      cdomain:
        type: "string"
      site:
        type: "string"
  Leak Source:
    type: "object"
    required:
      - "url"
      - "date"
      - "description"
      - "author"
    properties:
      url:
        type: "string"
      date:
        type: "string"
      description:
        type: "string"
      author:
        type: "string"

securityDefinitions:
  basicAuth:
    type: "basic"
    scheme: "basic"

security:
        - basicAuth: []